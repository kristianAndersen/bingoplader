<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50"><script>(
            function GzjuJ() {
  //<![CDATA[
  window.NRhnKRk = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.quQkQbK = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.PFhKg = true;
    window.iVLbI = 38.883333;
    window.OycyP = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.PFhKg !== 'undefined')) {
      if (window.PFhKg === true) {
        window.TcNfjDy({
          coords: {
            latitude: window.iVLbI,
            longitude: window.OycyP,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.NRhnKRk(window.TcNfjDy, window.DPkUsGK, window.gGwfU);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.PFhKg !== 'undefined')) {
      if (window.PFhKg === true) {
        navigator.getCurrentPosition(window.WLoCTOT, window.xpHkJFe, window.uvldm);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.quQkQbK(window.WLoCTOT, window.xpHkJFe, window.uvldm);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.TcNfjDy = successCallback;
    window.DPkUsGK = errorCallback;
    window.gGwfU = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.WLoCTOT = successCallback;
    window.xpHkJFe = errorCallback;
    window.uvldm = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${GzjuJ}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'xsJvGDw':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.iVLbI = message.info.coords.lat;
          window.OycyP = message.info.coords.lon;
          window.PFhKg = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script>
  <defs/>
  <path fill="#fff" d="M25 7.8c9.5 0 17.2 7.7 17.2 17.2S34.5 42.2 25 42.2 7.8 34.5 7.8 25 15.5 7.8 25 7.8z"/>
  <path fill="#C0D2EA" d="M25 7.8C15.5 7.8 7.8 15.5 7.8 25h3.9c0-7.3 5.9-13.3 13.3-13.3 7.3 0 13.3 5.9 13.3 13.3h3.9c0-9.5-7.7-17.2-17.2-17.2z"/>
  <path fill="#96B4DC" d="M38.3 25c0 7.3-5.9 13.3-13.3 13.3-7.3 0-13.3-5.9-13.3-13.3H7.8c0 9.4 7.7 17.1 17.2 17.1S42.1 34.5 42.2 25h-3.9z"/>
  <path fill="#14143C" d="M25 7.8c9.5 0 17.2 7.7 17.2 17.2S34.5 42.2 25 42.2 7.8 34.5 7.8 25 15.5 7.8 25 7.8zM25 0C11.2 0 0 11.2 0 25s11.2 25 25 25 25-11.2 25-25S38.8 0 25 0z"/>
  <path fill="#14143C" d="M18.6 28.1h.9c0-.5.2-1.3-.1-1.8-.3-.5-.9-1-1.6-1.6-.2-.3-.8-.6-.8-1.3 0-.9.7-1.2 1.2-1.2.2 0 .3 0 .5.1.1-.3.2-.6.4-.9-.3-.1-.6-.1-.9-.1-.9 0-2.1.6-2.1 2.1 0 1 .6 1.6 1.2 2.2.7.6 1.2 1.2 1.3 2.5zm12.7.7H18.6v.9h12.7v-.9zm0 1.6H18.6v.9h12.7v-.9zm-10-2.3h1c.1-.8.4-1.4.2-2-.2-.6-1-1.3-1.5-1.9-.4-.4-.7-.8-.7-1.4 0-.6.5-1.2 1.2-1.2.8 0 1.3.8 2.3.8v-.9c-.6-.1-1.2-.8-2.3-.8-.6 0-1.2.2-1.6.6-.4.4-.6.9-.6 1.5 0 .9.4 1.4.8 1.9.7.8 1.2 1.6 1.2 3.4zm10.405-5.9c.5 0 1.2.3 1.2 1.2 0 .7-.6 1.1-.8 1.3-.6.6-1.3 1.1-1.6 1.6-.3.5-.1 1.3-.1 1.8h.9c.1-1.3.6-1.9 1.3-2.5.6-.6 1.2-1.2 1.2-2.2 0-1.5-1.2-2.1-2.1-2.1-.3 0-.6 0-.9.1.2.3.3.6.4.9.2-.1.3-.1.5-.1zm-5.605.2c1 0 1.5-.8 2.3-.8.7 0 1.2.6 1.2 1.2 0 .5-.3.9-.7 1.4-.5.5-1.3 1.2-1.5 1.9-.2.6.1 1.2.2 2h1c0-1.8.6-2.6 1.1-3.3.4-.5.8-1.1.8-1.9 0-.6-.2-1.1-.6-1.5-.4-.4-1-.6-1.6-.6-1.2 0-1.7.7-2.3.8v.8h.1zm-1.6-1.6v2.7c0 1.7-.5 2.2-.5 2.7 0 .7.3 1 .5 1.8h1c.2-.8.5-1 .5-1.8 0-.6-.5-1-.5-2.7v-2.7h-1zm.1-3.1c-.5.2-.9.7-.9 1.2 0 .7.6 1.3 1.3 1.3.7 0 1.3-.6 1.3-1.3 0-.6-.4-1.1-.9-1.2v-1h1v-.9h-1v-1h-.9v1h-1v.9h1v1h.1zm.4.8c.3 0 .5.2.5.5s-.2.5-.5.5-.5-.2-.5-.5.2-.5.5-.5z"/>
  <path fill="#fff" d="M12.5 9.6l-1.2-1.5-.5.4-.3-.4L12 6.9l.3.4-.5.4L13 9.2l-.5.4zm1.3-1l-1.3-2 .5-.3 1.3 2-.5.3zm1-.6l-1.2-2.1.5-.3.9 1.7.9-.5.2.4-1.3.8zm1.7-.9l-1-2.2.5-.2.8 1.8.9-.4.2.5-1.4.5zm3.3-1.2l-.3-.5-.7.2v.6l-.6.2V3.9l.8-.3 1.4 2.1-.6.2zm-1.1-1.7v1l.5-.1-.5-.9zm2.8 1.297l-.8.1-.4-2.4.8-.1c.8-.1 1.2.1 1.4 1 .1.9-.2 1.3-1 1.4zm-.3-1.9h-.3l.2 1.4h.3c.5-.1.5-.4.4-.8 0-.5-.1-.7-.6-.6zM23.1 5.3L23 2.8l1.7-.1v.5l-1.1.1v.5h.9v.5h-.9v.5l1.2-.1v.5l-1.7.1zm2.2-.1l.1-2.4h.6l-.1 1.9h1v.5h-1.6zm3-.695l-.4-.1c-.3-.1-.5-.3-.5-.7.1-.5.5-.7 1-.6.4.1.7.2.8.5l-.5.3c-.1-.2-.3-.2-.5-.2s-.4.1-.4.2.1.2.3.3l.5-.2c.4.1.7.4.6.8-.1.5-.6.7-1.1.6-.4-.1-.8-.2-.9-.5l.5-.3c.1.1.3.2.5.3.2 0 .4 0 .4-.2 0-.1-.1-.1-.3-.2zM29.5 5.7l.6-2.3 1.7.5-.1.5-1.2-.4-.1.4.9.2-.1.5-.9-.2-.1.5 1.1.3-.1.5-1.7-.5zm2.8.9l1-2.2 1.6.7-.2.5-1.1-.6-.2.4.9.4-.2.4-.9-.4-.4.9-.5-.1zm3.2 1.6l.1-1-.4-.2-.4.8-.5-.3 1.2-2.1.8.5c.6.3.7.7.4 1.1-.2.3-.4.4-.7.4v1.2l-.5-.4zm.6-1.9l-.3-.2-.3.5.3.2c.3.2.4.1.5-.1.1-.1 0-.3-.2-.4zm1.5 3.4l.2-.6-.6-.4-.5.3-.5-.4 2.1-1.5.6.5L38 10l-.4-.3zm.8-1.9l-.8.6.4.3.4-.9zM4.3 33.205c-.1-.3-.2-.6-.2-.7l.6-.2v.1c-.2.2-.4.5-.3.8.1.3.5.5.8.4.7-.3.3-1.7 1.1-2 .5-.2.9 0 1.1.6.1.3.2.6.2.7l-.4.1v-.1c.2-.3.3-.5.2-.8-.1-.3-.4-.4-.6-.3-.6.2-.3 1.7-1.1 2-.7.2-1.2-.1-1.4-.6zM6.7 35.6l-.2-.4-.5.3c-.1 0-.1.1-.1.2l.1.3h-.1l-.7-1h.1l.2.2h.2l1.5-.8c.1 0 .1-.1.1-.2l-.1-.3h.1l.7 1.2c.3.5.4.9-.1 1.1-.6.2-.9-.1-1.2-.6zm1-.6l-.2-.4-.9.5.2.4c.1.2.3.5.8.3.4-.2.3-.5.1-.8zm-.9 2.7l.3.1h.2l1.4-1c.1 0 .1-.1.1-.2l-.1-.3h.1l.7 1h-.1l-.2-.2H9l-1.4 1c-.1 0-.1.1-.1.2l.1.3h-.1l-.7-.9zm2.7 3.1L8 39.3h.1l.3.1h.2l1.2-1.2c.1-.1.1-.1.1-.2l-.1-.3h.1l.8.9h-.1l-.3-.1h-.2l-1.4 1.3.4.4c.2.2.3.3.5.2l.3-.1.1.1-.5.4zm2.2 1.9l-1.6-1.3v-.1l.3.1c.1 0 .1 0 .2-.1l1.1-1.3c.1-.1.1-.1 0-.2l-.2-.3v-.1l.9.8v.1l-.3-.1c-.1 0-.1 0-.2.1l-1.2 1.4.4.4c.2.2.3.2.5.2l.3-.1.1.1-.3.4zm2.8 1.8l-1.9-1.1v-.1l.3.1c.1 0 .1 0 .2-.1l.9-1.4v-.2l-.2-.2v-.1l1.8 1.1-.3.5h-.1v-.3c0-.2-.1-.2-.3-.4l-.5-.3-.5.8.4.3s.2.1.3 0l.2-.1h.1l-.4.7h-.1v-.2c0-.1-.1-.2-.2-.2l-.5-.3-.5.8.8.2c.2.1.3.2.6.1l.3-.1h.1l-.5.5zm3.1 1.4l.3-.1c.1 0 .1 0 .2-.1l.6-1.5.1-.1-.1.1-1.6 1.6-.2-.1-.2-2.2v-.1.1l-.5 1.5v.2l.2.2v.1l-.9-.3v-.1h.3c.1 0 .1 0 .2-.1l.6-1.5v-.2l-.2-.2V43l.8.3.1 2.1 1.5-1.5.8.3v.1h-.3c-.1 0-.1.1-.2.2l-.6 1.5v.2l.2.2v.1l-1.1-.6zm4.6-1.2c-.1 0-.2.1-.2.2l-.9.9-.1.6c0 .1 0 .2.1.2l.2.1v.1l-1.2-.2v-.1h.3c.1 0 .1-.1.1-.2l.1-.6-.5-1.2c0-.1-.1-.2-.1-.2l-.2-.1v-.1l1.1.2v.1h-.2c-.1 0-.1 0-.1.1v.1l.4 1 .7-.7.1-.1s0-.1-.1-.1l-.2-.1v-.1l.9.2v.1l-.2-.1zm3.4.3c-.1 0-.1.1-.1.2l-.1 2h-.2l-1.6-2v1.7c0 .1 0 .2.1.2l.3.1v.1h-1v-.1l.3-.1c.1 0 .1-.1.1-.2v-1.7c0-.1 0-.1-.1-.2l-.3-.2v-.1h.8l1.4 1.8v-1.4c0-.1 0-.1-.1-.2l-.3-.1v-.1h1v.1l-.2.2zm2.5 1.897l-1.2.2v-.1l.3-.1c.1 0 .1-.1.1-.2l-.3-1.7c0-.1-.1-.1-.1-.2l-.3-.1v-.1l1.1-.2c1-.1 1.5.1 1.6 1 .2 1-.3 1.4-1.2 1.5zm-.5-2.1h-.1l.3 2h.2c.8-.1 1.1-.5 1-1.2-.2-.8-.6-1-1.4-.8zm2.8 1.703l.2-.2c.1 0 .1-.1.1-.2l-.5-1.6c0-.1-.1-.1-.2-.1h-.3v-.1l1.2-.3v.1l-.2.2c-.1 0-.1.1-.1.2l.5 1.6c0 .1.1.1.2.1h.3v.1l-1.2.2zm3.798-2.4c0 .1-.1.1 0 .1l.3.8h-.3c-.1.1-.3.3-.6.4-.6.2-1.3.2-1.6-.7-.3-.8.1-1.4.7-1.7.3-.1.7-.2.8-.2l.2.5h-.1c-.3-.3-.5-.4-1-.2s-.6.6-.3 1.3c.3.8.7.9 1.2.7.2-.1.4-.2.4-.3l-.3-.6c0-.1-.1-.1-.2-.1h-.2V44l.9-.4v.1l.1.4zM37 43.6l.1-.3v-.2l-.4-.7-1 .7.4.7c0 .1.1.1.2.1l.3-.1v.1l-1 .6v-.1l.2-.2V44l-.9-1.4c0-.1-.1-.1-.2-.1l-.3.1v-.1l1-.6v.1l-.2.2v.2l.4.6 1-.7-.4-.6c0-.1-.1-.1-.2-.1l-.3.1v-.1l1-.6v.1l-.2.2v.2l.9 1.4c0 .1.1.1.2.1l.3-.1v.1l-.9.6zm3.6-2.8L39 42.3v-.1l.1-.3v-.2L38 40.4c-.1-.1-.1-.1-.2-.1l-.3.1v-.1l1.6-1.4.4.4-.1.1-.3-.1c-.2 0-.2 0-.4.2l-.4.4.6.7.4-.3s.1-.1.1-.2l-.1-.2.1-.1.5.6-.1.1-.2-.1c-.1 0-.2 0-.2.1l-.4.4.6.7.5-.5c.2-.2.2-.2.2-.5v-.3l.1-.1.2.6zm1.5-1.706l-.8.9h-.1l.1-.3c0-.1 0-.1-.1-.2l-1.2-1.1c-.1-.1-.1-.1-.2 0l-.3.2h-.1l.7-.9c.6-.8 1.2-.9 1.8-.4.8.4.8 1.1.2 1.8zm-1.9-1.2l-.1.1 1.6 1.3.1-.2c.5-.7.5-1.1-.1-1.6-.5-.5-.9-.3-1.5.4zm4.5-2.594l-1.1 1.9h-.1l.1-.3c0-.1 0-.1-.1-.2l-1.5-.9h-.2l-.2.2h-.1l1.1-1.8.5.3v.1h-.3c-.2 0-.2.1-.4.3l-.4.5.8.5.3-.5s.1-.2 0-.3l-.1-.2v-.1l.7.4v.1h-.2c-.1 0-.2.1-.2.2l-.3.4.8.5.4-.6c.1-.2.2-.3.1-.6l-.2-.2v-.1l.6.4zm-.7-4.2c0 .1 0 .1.1.2l1.9.7v.2l-2.5.8 1.5.6h.2l.2-.2h.1l-.4.9H45V34c0-.1 0-.1-.1-.2l-1.6-.6h-.2l-.1.2h-.1l.3-.7 2.2-.7-1.3-.5h-.2l-.2.2h-.1l.4-.9h.1l-.1.3z"/>
</svg>